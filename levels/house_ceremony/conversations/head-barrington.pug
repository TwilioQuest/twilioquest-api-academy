-
  const STATE_KEY = 'TQ_HOUSE_CEREMONY_WORLD_STATE';
  const worldState = getState(STATE_KEY);    

mixin unique
  response#unique.
    Could you remind me what makes House Hopper unique?

mixin join  
  response#join.
    I would like to join House Hopper!

mixin deciding 
  response#deciding.
    I’m still deciding which house to join.

mixin getting_started 
  response#getting_started.
    I’m excited to get started!

conversation(display_name="Professor Barrington, Head of House Hopper")
  case lastResponse
    
    when "unique"
      statement#unique
        responses 
          +join 
          +deciding

    when "join"
      statement#join

    when "deciding"
      statement#deciding

    when "getting_started"
      statement#getting_started

    default
      if !worldState.playerHouse
        statement#default
        responses
          +unique 
          +join 
          +deciding 

      else
        statement#gauntlet_default
        responses
            +getting_started

  statements
    statement#default
      text.
        We’re so excited you’ve decided to join the Academy, Operator!
        House Hopper welcomes you.

  statement#unique
      text.
        House Hopper’s strengths are boldness and a willingness to try new APIs.

  statement#join
      text.
        Wonderful! We’re thrilled to welcome you to House Hopper. 
        Just take your pledge scroll to the #[span.highlight House Fire] in the center of the hall to confirm your choice.

  statement#deciding
      text.
        Take your time, but you should know that after you confirm your choice, the House Gauntlet will begin. 
        It’s a very exciting time at the Academy!

  statement#gauntlet_default 
    text.
      Did you know that the Hopper Greenhouse has actually never 
      launched the House Gauntlet? The first house, chosen completely at random, 
      will be House Lovelace. Once you complete the first house, 
      the next one will be revealed to you. Perhaps it’ll be House Hopper!

  statement#getting_started 
    text.
      Good luck, Operator!
        

// Flush world state changes, if any
- setState(STATE_KEY, worldState);